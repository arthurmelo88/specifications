<?xml version="1.0" encoding="utf-8"?>
<!-- openEHR Release 1.0.1 candidate XML schema. Ocean Informatics 2007.03.08  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.openehr.org/v1/rm" targetNamespace="http://schemas.openehr.org/v1/rm" elementFormDefault="qualified" version="v1.0.1">
	<!-- <xs:element name="values" type="DATA_VALUE" /> -->
	<xs:complexType name="DATA_VALUE" abstract="true">
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="DV_BOOLEAN">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>
			The 'normal range' and 'is normal' functions in the reference model are implemented
			as attributes to enable storing this information explicitly rather than in a functional manner.
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="DV_ORDERED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="normal_range" type="DV_INTERVAL" minOccurs="0"/>
					<xs:element name="reference_ranges" type="REFERENCE_RANGE" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="normal_status" type="CODE_PHRASE" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="REFERENCE_RANGE">
		<xs:sequence>
			<xs:element name="meaning" type="DV_TEXT"/>
			<xs:element name="range" type="DV_INTERVAL"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DV_QUANTIFIED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DV_ORDERED">
				<xs:sequence>
					<xs:element name="accuracy" type="xs:float" minOccurs="0"/>
					<xs:element name="accuracy_is_percent" type="xs:boolean" minOccurs="0"/>
					<xs:element name="magnitude_status" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_COUNT">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<xs:element name="magnitude" type="xs:long"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_QUANTITY">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<xs:element name="magnitude" type="xs:double"/>
					<xs:element name="units" type="xs:string"/>
					<xs:element name="precision" type="xs:int" default="-1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_ORDINAL">
		<xs:complexContent>
			<xs:extension base="DV_ORDERED">
				<xs:sequence>
					<xs:element name="value" type="xs:int"/>
					<xs:element name="symbol" type="DV_CODED_TEXT"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="PROPORTION_KIND">
		<xs:restriction base="xs:integer">
			<xs:enumeration value="0"/>
			<xs:enumeration value="1"/>
			<xs:enumeration value="2"/>
			<xs:enumeration value="3"/>
			<xs:enumeration value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DV_PROPORTION">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<xs:element name="numerator" type="xs:float"/>
					<xs:element name="denominator" type="xs:float"/>
					<xs:element name="is_integral" type="xs:boolean"/>
					<xs:element name="type" type="PROPORTION_KIND"/>
					<xs:element name="precision" type="xs:int" default="-1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_PARAGRAPH">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="items" type="DV_TEXT" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_TEXT">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:string"/>
					<xs:element name="language" type="CODE_PHRASE" minOccurs="0"/>
					<xs:element name="encoding" type="CODE_PHRASE" minOccurs="0"/>
					<xs:element name="mappings" type="TERM_MAPPING" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_CODED_TEXT">
		<xs:complexContent>
			<xs:extension base="DV_TEXT">
				<xs:sequence>
					<xs:element name="defining_code" type="CODE_PHRASE"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="Iso8601DateTime">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{4}((0[1-9]|1[0-2])((0[1-9]|[12]\d|3[01])(T?([01]\d|2[0-3])([0-5]\d([0-5]\d([,.]\d+)?)?)?(Z|([+\-]((0\d)|(1[0-2]))(00|30)?))?)?)?)?|\d{4}(\-(0[1-9]|1[0-2])(\-(0[1-9]|[12]\d|3[01])(T([01]\d|2[0-3])(:[0-5]\d(:[0-5]\d([,.]\d+)?)?)?(Z|([+\-]((0\d)|(1[0-2]))(:(00|30))?))?)?)?)?"/>
			<!--xs:pattern value="(([1-9][0-9])|(0[0-9]))(([0-9][0-9])(\-?((0[1-9])|(1[0-2]))(\-?((0[1-9])|([12][0-9])|(3[01])))?)?)?(T?((([01][0-9])|(2[0-3]))(:?[0-5][0-9](:?([0-5][0-9]))?)?|(24(:?00)?(:?00)?))(Z|([+\-]((0[0-9])|(1[0-4]))(:?[0-5][0-9])?))?)?"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Iso8601Date">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{4}((((0[1-9])|(1[0-2]))((0[1-9])|([12]\d)|(3[01]))?)?|(\-(((0[1-9])|(1[0-2]))(\-((0[1-9])|([12]\d)|(3[01])))?)?)?)"/>
			<!--xs:pattern value="(([1-9][0-9])|(0[0-9]))(([0-9][0-9])(\-?((0[1-9])|(1[0-2]))(\-?((0[1-9])|([12][0-9])|(3[01])))?)?)?"/-->
			<!--xs:pattern value="[0-9][0-9][0-9][0-9](\-?(((0[1-9])|(1[0-2]))(\-?((0[1-9])|([12][0-9])|(3[01])))?)?)?"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Iso8601Time">
		<xs:restriction base="xs:string">
			<xs:pattern value="([01]\d|2[0-3])([0-5]\d([0-5]\d([,.]\d+)?)?)?(Z|([+\-]((0\d)|(1[0-2]))(00|30)?))?|([01]\d|2[0-3])(:[0-5]\d(:[0-5]\d([,.]\d+)?)?)?(Z|([+\-]((0\d)|(1[0-2]))(:(00|30))?))?"/>
			<!--xs:pattern value="((([01][0-9])|(2[0-3]))(:?[0-5][0-9](:?([0-5][0-9]))?)?|(24(:?00)?(:?00)?))([,.]?[0-9]+)?(Z|([+\-]((0[0-9])|(1[0-4]))(:?[0-5][0-9])?))?"/-->
			<!--xs:pattern value="(((([01][0-9])|(2[0-3]))(:?[0-5][0-9](:?[0-5][0-9]([,.][0-9]+)?)?)?)|(24(:?00(:?00([,.][0-9]+)?)?)?))(Z|([+\-]((0[0-9])|(1[0-4]))(:?[0-5][0-9])?))?"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Iso8601Duration">
		<xs:restriction base="xs:string">
			<xs:pattern value="P(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(\d+H)?(\d+M)?(\d+(\.\d+)?S)?)?"/>
			<!--xs:pattern value="P(\d+[YMWD]){0,4}(T(\d+[HM]){0,2}(\d+(\.\d+)?S)?)?"/-->
			<!--xs:pattern value="P((\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T((\d+H)?(\d+M)?(\d+([.,]\d+)?S)?)?"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DV_DATE_TIME">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601string yyyy-MM-ddTHH:mm:ss, allows for all dates, times and partials-->
					<xs:element name="value" type="Iso8601DateTime"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_TIME">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601string HH:mm:ss, allows for all times and partials-->
					<xs:element name="value" type="Iso8601Time"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_DATE">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601string yyyy-MM-dd allows for all dates-->
					<xs:element name="value" type="Iso8601Date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_DURATION">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601 string starting with P for Period -->
					<xs:element name="value" type="Iso8601Duration"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>
			The precedence of the attributes in DV_INTERVAL are:
			1. lower or upper_unbounded take precedence over presence of
			the lower or upper value
			2. lower or upper_included only has meaning when the appropriate
			value exists
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="DV_INTERVAL">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="lower" type="DV_ORDERED" minOccurs="0"/>
					<xs:element name="upper" type="DV_ORDERED" minOccurs="0"/>
					<xs:element name="lower_included" type="xs:boolean" default="true" minOccurs="0"/>
					<xs:element name="upper_included" type="xs:boolean" default="true" minOccurs="0"/>
					<xs:element name="lower_unbounded" type="xs:boolean"/>
					<xs:element name="upper_unbounded" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_ENCAPSULATED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="charset" type="CODE_PHRASE" minOccurs="0"/>
					<xs:element name="language" type="CODE_PHRASE" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_MULTIMEDIA">
		<xs:complexContent>
			<xs:extension base="DV_ENCAPSULATED">
				<xs:sequence>
					<xs:element name="uri" type="DV_URI" minOccurs="0"/>
					<xs:element name="data" type="xs:base64Binary" minOccurs="0"/>
					<xs:element name="alternate_text" type="xs:string" minOccurs="0"/>
					<xs:element name="media_type" type="CODE_PHRASE"/>
					<xs:element name="compression_algorithm" type="CODE_PHRASE" minOccurs="0"/>
					<xs:element name="integrity_check" type="xs:base64Binary" minOccurs="0"/>
					<xs:element name="integrity_check_algorithm" type="CODE_PHRASE" minOccurs="0"/>
					<xs:element name="size" type="xs:int"/>
					<xs:element name="thumbnail" type="DV_MULTIMEDIA" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_PARSABLE">
		<xs:complexContent>
			<xs:extension base="DV_ENCAPSULATED">
				<xs:sequence>
					<xs:element name="value" type="xs:string"/>
					<xs:element name="formalism" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_IDENTIFIER">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="issuer" type="xs:string"/>
					<xs:element name="assigner" type="xs:string"/>
					<xs:element name="id" type="xs:string"/>
					<xs:element name="type" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_STATE">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="DV_CODED_TEXT"/>
					<xs:element name="is_terminal" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_URI">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:anyURI" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_EHR_URI">
		<xs:complexContent>
			<xs:extension base="DV_URI">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CODE_PHRASE">
		<xs:sequence>
			<xs:element name="code_string" type="xs:string"/>
			<xs:element name="terminology_id" type="TERMINOLOGY_ID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TERM_MAPPING">
		<xs:sequence>
			<xs:element name="target" type="CODE_PHRASE"/>
			<xs:element name="match" type="matchString" default="?"/>
			<xs:element name="purpose" type="DV_CODED_TEXT" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>
			matchString limits the values of the match attribute in the Term mapping class
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="matchString">
		<xs:restriction base="xs:string">
			<xs:pattern value="\?"/>
			<xs:pattern value="&lt;"/>
			<xs:pattern value="&gt;"/>
			<xs:pattern value="="/>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>
			archetypeNodeId pattern matches allowable atCodes and archetypeIds, for use in locatable
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="archetypeNodeId">
		<xs:restriction base="xs:string">
			<xs:pattern value="([a-zA-Z][\w_]*-[\w][\w_]*-[\w][\w_]*\.[\w][\w_]*(-[\w][\w_]*)*\.v\d+(\.\d)*)|(at(0\.[0-9]{1,4}|[0-9]{4})(\.[0-9]{1,3})*)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>
			atCode pattern matches allowable atCodes for use in Activity ID on ISM_Transitions in ACTION
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="atCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="at(0\.[0-9]{1,4}|[0-9]{4})(\.[0-9]{1,3})*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PARTY_RELATED">
		<xs:complexContent>
			<xs:extension base="PARTY_IDENTIFIED">
				<xs:sequence>
					<xs:element name="relationship" type="DV_CODED_TEXT" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OBJECT_ID">
		<xs:sequence>
			<xs:element name="value" type="xs:token"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OBJECT_VERSION_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ARCHETYPE_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TEMPLATE_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TERMINOLOGY_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="HIER_OBJECT_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GENERIC_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID">
				<xs:sequence>
					<xs:element name="scheme" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OBJECT_REF">
		<xs:sequence>
			<xs:element name="id" type="OBJECT_ID"/>
			<xs:element name="namespace" type="xs:token"/>
			<xs:element name="type" type="xs:token"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PARTY_REF">
		<xs:complexContent>
			<xs:extension base="OBJECT_REF"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LOCATABLE_REF">
		<xs:complexContent>
			<xs:extension base="OBJECT_REF">
				<xs:sequence>
					<xs:element name="path" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTY_PROXY" abstract="true">
		<xs:sequence>
			<xs:element name="external_ref" type="PARTY_REF" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PARTY_IDENTIFIED">
		<xs:complexContent>
			<xs:extension base="PARTY_PROXY">
				<xs:sequence>
					<xs:element name="name" type="xs:string" minOccurs="0"/>
					<xs:element name="identifiers" type="DV_IDENTIFIER" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTY_SELF">
		<xs:complexContent>
			<xs:extension base="PARTY_PROXY">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTICIPATION">
		<xs:sequence>
			<xs:element name="performer" type="PARTY_PROXY"/>
			<xs:element name="time" type="DV_INTERVAL" minOccurs="0"/>
			<xs:element name="mode" type="DV_CODED_TEXT"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FEEDER_AUDIT">
		<xs:sequence>
			<xs:element name="originating_system_item_ids" type="DV_IDENTIFIER" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="feeder_system_item_ids" type="DV_IDENTIFIER" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="originating_system_audit" type="FEEDER_AUDIT_DETAILS"/>
			<xs:element name="feeder_system_audit" type="FEEDER_AUDIT_DETAILS" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FEEDER_AUDIT_DETAILS">
		<xs:sequence>
			<xs:element name="system_id" type="xs:string"/>
			<xs:element name="location" type="PARTY_IDENTIFIED" minOccurs="0"/>
			<xs:element name="provider" type="PARTY_IDENTIFIED" minOccurs="0"/>
			<xs:element name="subject" type="PARTY_PROXY" minOccurs="0"/>
			<xs:element name="time" type="DV_DATE_TIME" minOccurs="0"/>
			<xs:element name="version" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AUDIT_DETAILS">
		<xs:sequence>
			<xs:element name="system_id" type="xs:string"/>
			<xs:element name="committer" type="PARTY_PROXY"/>
			<xs:element name="time_committed" type="DV_DATE_TIME"/>
			<xs:element name="change_type" type="DV_CODED_TEXT"/>
			<xs:element name="description" type="DV_TEXT" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ATTESTATION">
		<xs:complexContent>
			<xs:extension base="AUDIT_DETAILS">
				<xs:sequence>
					<xs:element name="attested_view" type="DV_MULTIMEDIA" minOccurs="0"/>
					<xs:element name="proof" type="xs:string" minOccurs="0"/>
					<xs:element name="items" type="DV_EHR_URI" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="reason" type="DV_TEXT"/>
					<xs:element name="is_pending" type="xs:boolean" default="false"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="REVISION_HISTORY_ITEM">
		<xs:sequence>
			<xs:element name="version_id" type="OBJECT_VERSION_ID"/>
			<xs:element name="audits" type="AUDIT_DETAILS" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="REVISION_HISTORY">
		<xs:sequence>
			<xs:element name="items" type="REVISION_HISTORY_ITEM" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
