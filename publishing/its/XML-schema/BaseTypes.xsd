<?xml version="1.0" encoding="utf-8" ?>
<xs:schema id="BaseTypes" targetNamespace="openEHR/v1/BaseTypes" elementFormDefault="unqualified"
	xmlns="openEHR/v1/BaseTypes" xmlns:mstns="openEHR/v1/BaseTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<!-- <xs:element name="values" type="DATA_VALUE" /> -->
	<xs:complexType name="DATA_VALUE" abstract="true">
		<xs:sequence></xs:sequence>
	</xs:complexType>
	<xs:complexType name="DV_BOOLEAN">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:boolean" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>
			The 'normal range' and 'is normal' functions in the reference model are implemented
			as attributes to enable storing this information explicitly rather than in a functional manner.
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="DV_ORDERED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="normal_range" type="XS_DV_INTERVAL_RESTRICTED" minOccurs="0" />
					<xs:element name="reference_ranges" type="REFERENCE_RANGE" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="is_normal" type="xs:boolean" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="REFERENCE_RANGE">
		<xs:sequence>
			<xs:element name="meaning" type="DV_TEXT" />
			<xs:element name="range" type="XS_DV_INTERVAL_RESTRICTED" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DV_QUANTIFIED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DV_ORDERED">
				<xs:sequence>
					<xs:element name="accuracy" type="xs:float" minOccurs="0" />
					<xs:element name="accuracy_is_percent" type="xs:boolean" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_COUNT">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<xs:element name="magnitude" type="xs:unsignedLong" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_QUANTITY">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<xs:element name="magnitude" type="xs:double" />
					<xs:element name="units" type="xs:string" />
					<xs:element name="precision" type="xs:integer" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_ORDINAL">
		<xs:complexContent>
			<xs:extension base="DV_ORDERED">
				<xs:sequence>
					<xs:element name="value" type="xs:integer" />
					<xs:element name="symbol" type="DV_CODED_TEXT" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_QUANTITY_RATIO">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="numerator" type="DV_QUANTIFIED" />
					<xs:element name="denominator" type="DV_QUANTIFIED" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_PARAGRAPH">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="items" type="DV_TEXT" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_TEXT">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:string" />
					<xs:element name="language" type="CODE_PHRASE" minOccurs="0" />
					<xs:element name="encoding" type="CODE_PHRASE" minOccurs="0" />
					<xs:element name="mappings" type="TERM_MAPPING" maxOccurs="unbounded" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_CODED_TEXT">
		<xs:complexContent>
			<xs:extension base="DV_TEXT">
				<xs:sequence>
					<xs:element name="defining_code" type="CODE_PHRASE" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_DATE_TIME">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601string yyyy-MM-ddTHH:mm:ss, allows for all dates, times and partials-->
					<xs:element name="value" type="xs:dateTime" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_DURATION">
		<xs:complexContent>
			<xs:extension base="DV_QUANTIFIED">
				<xs:sequence>
					<!-- As an ISO 8601 string starting with P for Period -->
					<xs:element name="value" type="xs:duration" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:annotation>
		<xs:documentation>
			The precedence of the attributes in DV_INTERVAL are:
			1. lower or upper_unbounded take precedence over presence of
			the lower or upper value
			2. lower or upper_included only has meaning when the appropriate
			value exists
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="DV_INTERVAL">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="lower" type="DV_ORDERED" minOccurs="0" />
					<xs:element name="upper" type="DV_ORDERED" minOccurs="0" />
					<xs:element name="lower_included" type="xs:boolean" minOccurs="0" default="true" />
					<xs:element name="upper_included" type="xs:boolean" minOccurs="0" default ="true" />
					<xs:element name="lower_unbounded" type="xs:boolean" />
					<xs:element name="upper_unbounded" type="xs:boolean" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_ENCAPSULATED" abstract="true">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="charset" type="CODE_PHRASE" minOccurs="0" />
					<xs:element name="language" type="CODE_PHRASE" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_MULTI_MEDIA">
		<xs:complexContent>
			<xs:extension base="DV_ENCAPSULATED">
				<xs:sequence>
					<xs:element name="uri" type="DV_URI" minOccurs="0" />
					<xs:element name="data" type="xs:base64Binary" minOccurs="0" />
					<xs:element name="alternate_text" type="xs:string" minOccurs="0" />
					<xs:element name="media_type" type="CODE_PHRASE" />
					<xs:element name="compression_algorithm" type="CODE_PHRASE" minOccurs="0" />
					<xs:element name="integrity_check" type="xs:base64Binary" minOccurs="0" />
					<xs:element name="integrity_check_algorithm" type="CODE_PHRASE" minOccurs="0" />
					<xs:element name="size" type="xs:integer" />
					<xs:element name="thumbnail" type="DV_MULTI_MEDIA" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_PARSABLE">
		<xs:complexContent>
			<xs:extension base="DV_ENCAPSULATED">
				<xs:sequence>
					<xs:element name="value" type="xs:string" />
					<xs:element name="formalism" type="xs:string" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_IDENTIFIER">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="issuer" type="xs:string" />
					<xs:element name="assigner" type="xs:string" />
					<xs:element name="id" type="xs:string" />
					<xs:element name="type" type="xs:string" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_STATE">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="DV_CODED_TEXT" />
					<xs:element name="is_terminal" type="xs:boolean" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_URI">
		<xs:complexContent>
			<xs:extension base="DATA_VALUE">
				<xs:sequence>
					<xs:element name="value" type="xs:anyURI" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DV_EHR_URI">
		<xs:complexContent>
			<xs:extension base="DV_URI">
				<xs:sequence>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CODE_PHRASE">
		<xs:sequence>
			<xs:element name="code_string" type="xs:string" />
			<xs:element name="terminology_id" type="TERMINOLOGY_ID" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TERM_MAPPING">
		<xs:sequence>
			<xs:element name="target" type="CODE_PHRASE" />
			<xs:element name="match" type="matchString" default="?"  />
			<xs:element name="purpose" type="DV_CODED_TEXT" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>
			matchString limits the values of the match attribute in the Term mapping class
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="matchString">
		<xs:restriction base="xs:string">
			<xs:pattern value="\?" />
			<xs:pattern value="&lt;" />
			<xs:pattern value="&gt;" />
			<xs:pattern value="=" />
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>
			archetypeNodeId pattern matches allowable atCodes and archetypeIds, for use in locatable
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="archetypeNodeId" >
		<xs:restriction base="xs:string">
			<xs:pattern value="([a-zA-Z][\w_]*-[\w][\w_]*-[\w][\w_]*\.[\w][\w_]*(-[\w][\w_]*)*\.v\d+(\.\d)*)|(at(0\.[0-9]{1,4}|[0-9]{4})(\.[0-9]{1,3})*)"></xs:pattern>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>
			atCode pattern matches allowable atCodes for use in Activity ID on ISM_Transitions in ACTION
		</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="atCode">
		<xs:restriction base="xs:string">
			<xs:pattern value="at(0\.[0-9]{1,4}|[0-9]{4})(\.[0-9]{1,3})*"></xs:pattern>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PARTY_RELATED">
		<xs:complexContent>
			<xs:extension base="PARTY_IDENTIFIED">
				<xs:sequence>
					<xs:element name="relationship" type="DV_CODED_TEXT" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OBJECT_ID">
		<xs:sequence>
			<xs:element name="value" type="xs:token" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OBJECT_VERSION_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TERMINOLOGY_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="HIER_OBJECT_ID">
		<xs:complexContent>
			<xs:extension base="OBJECT_ID">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OBJECT_REF">
		<xs:sequence>
			<xs:element name="id" type="OBJECT_ID" />
			<xs:element name="namespace" type="xs:token" />
			<xs:element name="type" type="xs:token" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PARTY_REF">
		<xs:complexContent>
			<xs:extension base="OBJECT_REF">	
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LOCATABLE_REF">
		<xs:complexContent>
			<xs:extension base="OBJECT_REF">
				<xs:sequence>
					<xs:element name="path" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTY_PROXY" abstract="true">
		<xs:sequence>
			<xs:element name="external_ref" type="PARTY_REF" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PARTY_IDENTIFIED">
		<xs:complexContent>
			<xs:extension base="PARTY_PROXY">
				<xs:sequence>
					<xs:element name="name" type="xs:string" minOccurs="0" />
					<xs:element name="identifiers" type="DV_IDENTIFIER" maxOccurs="unbounded" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTY_SELF">
		<xs:complexContent>
			<xs:extension base="PARTY_PROXY">
				<xs:sequence></xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PARTICIPATION">
		<xs:sequence>
			<xs:element name="performer" type="PARTY_PROXY" />
			<xs:element name="time" type="XS_DV_INTERVAL_DATE_TIME" minOccurs="0" />
			<xs:element name="mode" type="DV_CODED_TEXT" />
		</xs:sequence>
	</xs:complexType>
	
	<xs:annotation>
		<xs:documentation>
			The reference model provides a means of restricting intervals to be of particular
			types through the use of generic types. This is not available in XML schema - so
			a set of restricted interval types is provided for this purpose.
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="XS_DV_INTERVAL_RESTRICTED">
		<xs:sequence>
			<xs:element name="lower_included" type="xs:boolean" minOccurs="0" default="true" />
			<xs:element name="upper_included" type="xs:boolean" minOccurs="0" default ="true" />
			<xs:element name="lower_unbounded" type="xs:boolean" />
			<xs:element name="upper_unbounded" type="xs:boolean" />
		</xs:sequence>
	</xs:complexType>	
	<xs:complexType name="XS_DV_INTERVAL_DATE_TIME">
		<xs:complexContent>
			<xs:extension base="XS_DV_INTERVAL_RESTRICTED">
				<xs:sequence>
					<xs:element name="lower" type="DV_DATE_TIME" minOccurs="0" />
					<xs:element name="upper" type="DV_DATE_TIME" minOccurs="0" />
				</xs:sequence>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>	
	<xs:complexType name="XS_DV_INTERVAL_COUNT">
		<xs:complexContent>
			<xs:extension base="XS_DV_INTERVAL_RESTRICTED">
				<xs:sequence>
					<xs:element name="lower" type="DV_COUNT" minOccurs="0" />
					<xs:element name="upper" type="DV_COUNT" minOccurs="0" />
				</xs:sequence>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="XS_DV_ORDINAL">
		<xs:complexContent>
			<xs:extension base="XS_DV_INTERVAL_RESTRICTED">
				<xs:sequence>
					<xs:element name="lower" type="DV_ORDINAL" minOccurs="0" />
					<xs:element name="upper" type="DV_ORDINAL" minOccurs="0" />
				</xs:sequence>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="XS_DV_INTERVAL_QUANTITY">
		<xs:complexContent>
			<xs:extension base="XS_DV_INTERVAL_RESTRICTED">
				<xs:sequence>
					<xs:element name="lower" type="DV_QUANTITY" minOccurs="0" />
					<xs:element name="upper" type="DV_QUANTITY" minOccurs="0" />
				</xs:sequence>		
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FEEDER_AUDIT">
		<xs:sequence>
			<xs:element name="originating_system_item_ids" type="DV_IDENTIFIER" maxOccurs="unbounded" minOccurs="0" />
			<xs:element name="feeder_system_item_ids" type="DV_IDENTIFIER" maxOccurs="unbounded" minOccurs="0" />
			<xs:element name="originating_system_audit" type="FEEDER_AUDIT_DETAILS" />
			<xs:element name="feeder_system_audit" type="FEEDER_AUDIT_DETAILS" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FEEDER_AUDIT_DETAILS">
		<xs:sequence>
			<xs:element name="system_id" type="xs:string" />
			<xs:element name="location" type="PARTY_IDENTIFIED" minOccurs="0" />
			<xs:element name="provider" type="PARTY_IDENTIFIED" minOccurs="0" />
			<xs:element name="subject" type="PARTY_PROXY" minOccurs="0" />
			<xs:element name="time" type="DV_DATE_TIME" minOccurs="0" />
			<xs:element name="version" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AUDIT_DETAILS">
		<xs:sequence>
			<xs:element name="system_id" type="xs:string" />
			<xs:element name="committer" type="PARTY_PROXY" />
			<xs:element name="time_committed" type="DV_DATE_TIME" />
			<xs:element name="change_type" type="DV_CODED_TEXT" />
			<xs:element name="description" type="DV_TEXT" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ATTESTATION">
		<xs:complexContent>
			<xs:extension base="AUDIT_DETAILS">
				<xs:sequence>
					<xs:element name="proof" type="DV_ENCAPSULATED" minOccurs="0" />
					<xs:element name="items" type="DV_EHR_URI" maxOccurs="unbounded" minOccurs="0" />
					<xs:element name="reason" type="DV_TEXT" />
					<xs:element name="is_pending" type="xs:boolean" default="false" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
